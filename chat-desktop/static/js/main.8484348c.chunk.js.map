{"version":3,"sources":["redux/application.js","redux/contacts.js","redux/messages.js","redux/profile.js","utils/objDiv.js","Components/MainBox/Messages/MessageInfo.js","Components/MainBox/Messages/MessageOutbox.js","Components/MainBox/Messages/MessageInbox.js","Components/MainBox/Messages/Messages.js","Components/MainBox/Chat.js","redux/actions.js","Components/MainBox/Icons/Mic.js","Components/MainBox/Icons/Staple.js","Components/MainBox/MainBoxBottom.js","Components/MainBox/Icons/Search.js","Components/MainBox/Icons/Option.js","Components/MainBox/MainBoxHeader.js","Components/MainBox/MainBox.js","Components/ProfileId/ProfileHeader.js","Components/ProfileId/ProfileBody.js","Components/ProfileId/ProfileBottom.js","Components/ProfileId/Profile.js","Components/ProfileId/ProfileWrapper.js","Components/Sidebar/Contacts/Avatar.js","Components/Sidebar/Contacts/NameLastMessage.js","Components/Sidebar/Contacts/LastTime.js","Components/Sidebar/Contacts/Contact.js","Components/Sidebar/Contacts/Contacts.js","Components/Sidebar/ContactsSearch.js","Components/Sidebar/SideBar.js","App.js","Components/LoadingSkeleton/SkeletonSidebar.js","Components/LoadingSkeleton/SkeletonLoading.js","Root.js","index.js"],"names":["initialState","profileOpened","searchValueMessages","searchValueContacts","reducer","state","action","type","payload","loading","items","itemId","chatLog","sentMessage","sentMessageType","id","scrollToBottom","div","document","getElementById","scrollTop","scrollHeight","MessageInfo","message","key","_id","className","content","MessageOutbox","hasOwnProperty","moment","time","format","read","MessageInbox","opened","useParams","chatSelected","useSelector","contacts","find","item","fullname","Messages","myId","profile","toUserId","Chat","dispatch","useDispatch","messages","searchValue","application","filterChatLog","filter","lowerCase","toLowerCase","lowerCaseSearch","indexOf","useEffect","contactId","fetch","then","response","json","loadMessages","useHotkeys","map","Mic","sentMessageValue","send","method","headers","Accept","body","JSON","stringify","sendMessage","e","preventDefault","SwitchTransition","CSSTransition","length","addEndListener","node","done","addEventListener","classNames","style","color","marginRight","onClick","Staple","MainBoxBottom","placeholder","value","onChange","event","target","Search","Option","loadingMessages","pointerEvents","opacity","MainBoxHeader","selectedOne","el","online","MainBox","ProfileHeader","username","ProfileBody","props","socials","instagram","icon","faInstagram","twitter","faTwitter","facebook","faFacebookF","ProfileBottom","Profile","contact","ProfileWrapper","in","timeout","unmountOnExit","Avatar","NameLastMessage","word","lastMessage","substring","LastTime","Contact","history","useHistory","push","handleOpenChat","Contacts","filterContacts","text","ContactsSearch","SideBar","App","path","SkeletonSideBar","fontSize","lineHeight","circle","height","width","count","max","SkeletonLoading","SkeletonSidebar","Root","loadingContacts","loadingMyId","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","logger","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8484348c.chunk.js","sourcesContent":["const initialState = {\r\n  profileOpened: false,\r\n  searchValueMessages: \"\",\r\n  searchValueContacts: \"\",\r\n};\r\n\r\nfunction reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"profile/open\":\r\n      return {\r\n        ...state,\r\n        profileOpened: !state.profileOpened,\r\n      };\r\n    case \"profile/close\":\r\n      return {\r\n        ...state,\r\n        profileOpened: false,\r\n      };\r\n    case \"application/setSearchValueMessages\":\r\n      return {\r\n        ...state,\r\n        searchValueMessages: action.payload,\r\n      };\r\n    case \"application/setSearchValueContacts\":\r\n      return {\r\n        ...state,\r\n        searchValueContacts: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;\r\n","const initialState = {\r\n  loading: true,\r\n  items: [],\r\n  itemId: {},\r\n};\r\n\r\nfunction reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"contacts/load/start\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case \"contacts/load/success\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        items: action.payload,\r\n      };\r\n    case \"contacts/chat/selected\":\r\n      return {\r\n        ...state,\r\n        itemId: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;\r\n","const initialState = {\r\n  loading: true,\r\n  chatLog: [],\r\n  sentMessage: \"\",\r\n  sentMessageType: \"text\",\r\n};\r\n\r\nfunction reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"messages/load/start\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case \"messages/load/success\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        chatLog: action.payload,\r\n      };\r\n    case \"message/send/value\":\r\n      return {\r\n        ...state,\r\n        sentMessage: action.payload,\r\n      };\r\n    case \"message/send/type\":\r\n      return {\r\n        ...state,\r\n        sentMessageType: action.payload,\r\n      };\r\n    case \"message/send/start\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    case \"message/send/success\":\r\n      return {\r\n        ...state,\r\n        chatLog: [...state.chatLog, action.payload],\r\n        sentMessage: \"\",\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;\r\n","const initialState = {\n  id: {},\n  loading: true,\n};\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case \"profile/load/id/start\":\n      return {\n        ...state,\n        loading: true,\n      };\n    case \"profile/load/id/success\":\n      return {\n        ...state,\n        id: action.payload,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","function scrollToBottom() {\r\n  const div = document.getElementById(\"bottom\");\r\n  div.scrollTop = div.scrollHeight;\r\n}\r\nexport default scrollToBottom;\r\n","import React from \"react\";\n\nfunction MessageInfo({ message }) {\n    return (\n      <div key={message._id} className=\"message-info\">\n        <span>{message.content}</span>\n      </div>\n    );\n}\n\nexport default MessageInfo;\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nfunction MessageOutbox({ message }) {\r\n    return (\r\n      <div key={message._id} className=\"message-to\">\r\n        <span className=\"message-to-content\">\r\n          <div>{message.content}</div>\r\n          <div className=\"message-time\">\r\n            {message.hasOwnProperty(\"time\") &&\r\n              moment(message.time).format(\"h:mm\")}\r\n            {message.read ? (\r\n              <div className=\"material-icons\">done_all</div>\r\n            ) : (\r\n              <div className=\"material-icons\">done</div>\r\n            )}\r\n          </div>\r\n        </span>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default MessageOutbox;\r\n","import React from \"react\";\nimport moment from \"moment\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\n\nfunction MessageInbox({ message }) {\n  const opened = useParams().id;\n  const chatSelected = useSelector((state) =>\n    state.contacts.items.find((item) => {\n      return item._id === opened;\n    })\n  );\n\n    return (\n      <div key={message._id} className=\"message-from\">\n        <div className=\"pic-avatar-min-2\">{chatSelected.fullname[0]}</div>\n        <span className=\"message-from-content\">\n          <div>{message.content}</div>\n          <div className=\"message-time\">\n            {message.hasOwnProperty(\"time\") &&\n              moment(message.time).format(\"h:mm\")}\n          </div>\n        </span>\n      </div>\n    );\n}\n\nexport default MessageInbox;\n","import React from \"react\";\r\nimport MessageInfo from \"./MessageInfo\";\r\nimport MessageOutbox from \"./MessageOutbox\";\r\nimport MessageInbox from \"./MessageInbox\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nfunction Messages({ message }) {\r\n  const myId = useSelector((state) => state.profile.id);\r\n\r\n  if (myId._id === message.toUserId && message.type === \"text\") {\r\n    return <MessageInbox message={message} />;\r\n}\r\n  if (message.type === \"info\") {\r\n    return <MessageInfo message={message} />\r\n}\r\n  if (myId._id !== message.toUserId && message.type === \"text\") {\r\n    return <MessageOutbox message={message}/>\r\n  } return null\r\n}\r\n    export default Messages;\r\n\r\n","import React, {useEffect} from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHotkeys } from \"react-hotkeys-hook\";\r\nimport {loadMessages, openProfile} from \"../../redux/actions\";\r\nimport Messages from \"./Messages/Messages\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nfunction Chat() {\r\n  const dispatch = useDispatch();\r\n  const chatLog = useSelector((state) => state.messages.chatLog);\r\n  const searchValue = useSelector(\r\n    (state) => state.application.searchValueMessages\r\n  );\r\n  const chatSelected = useParams().id;\r\n  const myId = useSelector((state) => state.profile.id);\r\n  const filterChatLog = chatLog.filter((item) => {\r\n    let text = item.content;\r\n    let lowerCase = text.toLowerCase();\r\n    let lowerCaseSearch = searchValue.toLowerCase();\r\n    return (lowerCase.indexOf(lowerCaseSearch) !== -1)\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(loadMessages(chatSelected, myId._id));\r\n  }, [dispatch, chatSelected, myId]);\r\n\r\n  useHotkeys(\r\n    \"shift+p\",\r\n    () => {\r\n      dispatch(openProfile());\r\n    },\r\n    {\r\n      filter: () => true,\r\n    }\r\n  );\r\n\r\n  return (\r\n    <div className=\"main-box-chat-log\">\r\n      <div className=\"messages\" id=\"bottom\">\r\n        {filterChatLog.map((message) => {\r\n          return <Messages key={message._id} message={message} />;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","import scrollToBottom from \"../utils/objDiv\";\r\n\r\nexport function loadContacts() {\r\n  return (dispatch) => {\r\n    dispatch({ type: \"contacts/load/start\" });\r\n    fetch(\"https://api.intocode.ru:8001/api/contacts\")\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        dispatch({\r\n          type: \"contacts/load/success\",\r\n          payload: json,\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function loadMyId() {\r\n  return (dispatch) => {\r\n    dispatch({ type: \"profile/load/id/start\" });\r\n    fetch(\"https://api.intocode.ru:8001/api/profile\")\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        dispatch({\r\n          type: \"profile/load/id/success\",\r\n          payload: json,\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function chatId(item) {\r\n  return (dispatch) => {\r\n    dispatch({ type: \"profile/close\" });\r\n    dispatch({\r\n      type: \"contacts/chat/selected\",\r\n      payload: item,\r\n    });\r\n  };\r\n}\r\n\r\nexport function openProfile() {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: \"profile/open\",\r\n    });\r\n  };\r\n}\r\n\r\nexport function setSearchValueMessages(item) {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: \"application/setSearchValueMessages\",\r\n      payload: item,\r\n    });\r\n  };\r\n}\r\n\r\nexport function setSearchValueContacts(item) {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: \"application/setSearchValueContacts\",\r\n      payload: item,\r\n    });\r\n  };\r\n}\r\n\r\nexport function loadMessages(contactId, myId) {\r\n  return (dispatch) => {\r\n    dispatch({ type: \"messages/load/start\" });\r\n    fetch(`https://api.intocode.ru:8001/api/messages/${myId}/${contactId}`)\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        dispatch({\r\n          type: \"messages/load/success\",\r\n          payload: json,\r\n        });\r\n        scrollToBottom();\r\n      });\r\n  };\r\n}\r\n\r\nexport function sendTextValue(message) {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: \"message/send/value\",\r\n      payload: message,\r\n    });\r\n  };\r\n}\r\n\r\nexport function sendMessage(myId, contactId, content, type) {\r\n  return (dispatch) => {\r\n    dispatch({ type: \"message/send/start\" });\r\n    fetch(\"https://api.intocode.ru:8001/api/messages\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        myId: `${myId}`,\r\n        contactId: `${contactId}`,\r\n        type: `${type}`,\r\n        content: `${content}`,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        dispatch({\r\n          type: \"message/send/success\",\r\n          payload: json,\r\n        });\r\n        scrollToBottom();\r\n      });\r\n  };\r\n}\r\n","import React from \"react\";\nimport { SwitchTransition, CSSTransition } from \"react-transition-group\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { sendMessage } from \"../../../redux/actions\";\nimport { useParams } from \"react-router-dom\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\n\nfunction Mic() {\n  const myId = useSelector((state) => state.profile.id);\n  const chatSelected = useParams().id;\n  const sentMessageValue = useSelector((state) => state.messages.sentMessage);\n  const sentMessageType = useSelector(\n    (state) => state.messages.sentMessageType\n  );\n  const dispatch = useDispatch();\n  const send = (message) => {\n    if (message !== \"\") {\n      dispatch(sendMessage(myId._id, chatSelected, message, sentMessageType));\n    }\n  };\n  const handle = () => {\n    send(sentMessageValue);\n  };\n\n  useHotkeys(\n    \"enter\",\n    (e) => {\n      e.preventDefault();\n\n      send(sentMessageValue);\n    },\n    [sentMessageValue]\n  );\n\n  return (\n    <div className=\"mic\">\n      <SwitchTransition>\n        <CSSTransition\n          key={sentMessageValue.length < 1}\n          addEndListener={(node, done) =>\n            node.addEventListener(\"transitionend\", done, false)\n          }\n          classNames=\"fade\"\n        >\n          {sentMessageValue.length < 1 ? (\n            <span\n              className=\"material-icons\"\n              style={{ color: \"#565656\", marginRight: \"20px\" }}\n            >\n              mic\n            </span>\n          ) : (\n            <span\n              className=\"material-icons\"\n              onClick={() => {\n                handle();\n              }}\n              style={{ color: \"#565656\", marginRight: \"20px\" }}\n            >\n              send\n            </span>\n          )}\n        </CSSTransition>\n      </SwitchTransition>\n    </div>\n  );\n}\n\nexport default Mic;\n","import React from \"react\";\n\nfunction Staple() {\n  return (\n    <div className=\"staple\">\n      <span\n        className=\"material-icons\"\n        style={{ color: \"#565656\", marginRight: \"20px\" }}\n      >\n        attach_file\n      </span>\n    </div>\n  );\n}\n\nexport default Staple;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { sendTextValue } from \"../../redux/actions\";\nimport Mic from \"./Icons/Mic\";\nimport Staple from \"./Icons/Staple\";\n\nfunction MainBoxBottom() {\n  const sentMessageValue = useSelector((state) => state.messages.sentMessage);\n  const dispatch = useDispatch();\n  const handleChange = (event) => {\n    dispatch(sendTextValue(event.target.value));\n  };\n\n  return (\n    <div className=\"main-box-bottom\">\n      <div className=\"input-message\">\n        <input\n          placeholder=\"Write a message\"\n          type=\"text\"\n          value={sentMessageValue}\n          onChange={handleChange}\n        />\n      </div>\n      <div className=\"staple-mic\">\n        <Staple />\n        <Mic />\n      </div>\n    </div>\n  );\n}\n\nexport default MainBoxBottom;\n","import React from \"react\";\r\nimport { setSearchValueMessages } from \"../../../redux/actions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nfunction Search() {\r\n  const searchValue = useSelector((state) => state.application.searchValueMessages);\r\n\r\n  const handleChange = (e) => {\r\n    dispatch(setSearchValueMessages(e.target.value));\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n      <div className=\"search-icon-box\">\r\n        <span className=\"material-icons\">search</span>\r\n        <div className=\"input-search\">\r\n          <input\r\n            type=\"search\"\r\n            placeholder=\"chat search\"\r\n            className=\"search-bar-skeleton\"\r\n            value={searchValue}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\nimport { openProfile } from \"../../../redux/actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nfunction Option() {\n  const loadingMessages = useSelector((state) => state.messages.loading);\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"option-icon-box\">\n      <span\n        className=\"material-icons\"\n        style={loadingMessages ? { pointerEvents: \"none\", opacity: \"0.4\" } : {}}\n        onClick={() => dispatch(openProfile())}\n      >\n        settings\n      </span>\n    </div>\n  );\n}\n\nexport default Option;\n","import React from \"react\";\r\nimport Search from \"./Icons/Search\";\r\nimport Option from \"./Icons/Option\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction MainBoxHeader() {\r\n  const chatSelected = useParams().id;\r\n  const contacts = useSelector((state) => state.contacts.items);\r\n  const loadingMessages = useSelector((state) => state.messages.loading);\r\n  const selectedOne = contacts.find((el) => {\r\n    return (el._id === chatSelected)\r\n  });\r\n\r\n  return (\r\n    <div className=\"main-box-header\">\r\n      <Search />\r\n      <div className=\"name-in-box\">\r\n        {loadingMessages ? (\r\n          <div>loading</div>\r\n        ) : (\r\n          <div className=\"status-div\">\r\n            {selectedOne.fullname}\r\n            {selectedOne.hasOwnProperty(\"online\") &&\r\n              (selectedOne.online ? (\r\n                <div className=\"online\" />\r\n              ) : (\r\n                <div className=\"offline\" />\r\n              ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <Option />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainBoxHeader;\r\n","import React from \"react\";\nimport {  useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport Chat from \"../../Components/MainBox/Chat\";\nimport MainBoxBottom from \"./MainBoxBottom\";\nimport MainBoxHeader from \"./MainBoxHeader\";\n\nfunction MainBox() {\n  const chatSelected = useParams().id;\n  const contact = useSelector((state) => state.contacts.items);\n  const selectedOne = contact.find((el) => {\n    return el._id === chatSelected;\n  });\n\n  return selectedOne ? (\n    <div className=\"main-box\">\n      <MainBoxHeader />\n      <Chat />\n      <MainBoxBottom />\n    </div>\n  ) : (\n    <div className=\"box-loading\" id=\"bottom\">Please, select a chat to start messaging</div>\n  );\n\n\n}\n\nexport default MainBox;\n","import React from \"react\";\r\n\r\nfunction ProfileHeader({ item }) {\r\n  return (\r\n    <div>\r\n      <div className=\"header\">\r\n        <div className=\"pic-avatar-full\">\r\n          <div>{item.fullname[0]}</div>\r\n        </div>\r\n        <div className=\"min-header\">\r\n          <div className=\"name-profile\">{item.fullname}</div>\r\n          <div className=\"tag\">@{item.username}</div>\r\n          <div className=\"icons-for-profile\">\r\n            <div className=\"call\">\r\n              <span className=\"material-icons md-32\">call</span>\r\n            </div>\r\n            <div className=\"video\">\r\n              <span className=\"material-icons\">videocam</span>\r\n            </div>\r\n            <div className=\"mail\">\r\n              <span className=\"material-icons\">mail</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileHeader;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faFacebookF,\r\n  faTwitter,\r\n  faInstagram,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nfunction ProfileBody(props) {\r\n  const selectedOne = props.item;\r\n\r\n  return (\r\n    selectedOne.hasOwnProperty(\"socials\") && (\r\n      <div className=\"body\">\r\n        <div>Social</div>\r\n        <div className=\"min-body\">\r\n          {selectedOne?.socials && selectedOne.socials.instagram && (\r\n            <div className=\"iconT\">\r\n              <div className=\"icon\">\r\n                <FontAwesomeIcon className=\"facebook\" icon={faInstagram} />\r\n              </div>\r\n              <div>{selectedOne?.socials && selectedOne.socials.instagram}</div>\r\n            </div>\r\n          )}\r\n          {selectedOne?.socials && selectedOne.socials.twitter && (\r\n            <div className=\"iconT\">\r\n              <div className=\"icon\">\r\n                <FontAwesomeIcon className=\"facebook\" icon={faTwitter} />\r\n              </div>\r\n              <div>{selectedOne?.socials && selectedOne.socials.twitter}</div>\r\n            </div>\r\n          )}\r\n          {selectedOne?.socials && selectedOne.socials.facebook && (\r\n            <div className=\"iconT\">\r\n              <div className=\"icon\">\r\n                <FontAwesomeIcon className=\"facebook\" icon={faFacebookF} />\r\n              </div>\r\n              <div>{selectedOne?.socials && selectedOne.socials.facebook}</div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default ProfileBody;\r\n","import React from \"react\";\r\n\r\nfunction ProfileBottom() {\r\n  return (\r\n    <div className=\"bottom\">\r\n      <div>Media</div>\r\n      <div className=\"files-media\">\r\n        <div className=\"object-media\" />\r\n        <div className=\"text-object\">desktop-chat.pdf</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileBottom;\r\n","import React from \"react\";\r\nimport ProfileHeader from \"./ProfileHeader\"\r\nimport ProfileBody from \"./ProfileBody\"\r\nimport ProfileBottom from \"./ProfileBottom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction Profile() {\r\n  const chatSelected = useParams().id;\r\n  const contact = useSelector((state) => state.contacts.items);\r\n  const loadingMessages = useSelector((state) => state.messages.loading);\r\n\r\n  const selectedOne = contact.find((el) => {\r\n    return (el._id === chatSelected)\r\n  });\r\n\r\n  return (\r\n    <div className=\"profile-tab\">\r\n      {loadingMessages ? (\r\n        <div />\r\n      ) : (\r\n        <div>\r\n          <ProfileHeader item={selectedOne} />\r\n          <ProfileBody item={selectedOne} />\r\n          <ProfileBottom />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nfunction ProfileWrapper() {\r\n  const profile = useSelector((state) => state.application.profileOpened);\r\n  return (\r\n    <CSSTransition in={profile} timeout={1000} unmountOnExit classNames=\"profile\">\r\n      <Profile />\r\n    </CSSTransition>\r\n    )\r\n}\r\n\r\nexport default ProfileWrapper;\r\n","import React from \"react\";\r\n\r\nfunction Avatar({ contact }) {\r\n  return (\r\n      <div className=\"pic-avatar-min\">\r\n        <div>\r\n          <div className=\"pic-avatar-min-letter\">\r\n            {contact.fullname[0]}\r\n            {contact.online ? (\r\n              <span className=\"pic-avatar-min-status\" />\r\n            ) : (\r\n              <span />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Avatar;\r\n","import React from \"react\";\r\n\r\nfunction NameLastMessage({ contact }) {\r\n\r\n\r\n  function shorthand(word) {\r\n    if (word?.length > 10) {\r\n      return word.substring(0, 9) + \"...\";\r\n    }\r\n    return word;\r\n  }\r\n\r\n  //todo для аватарки сделать отдельный компонент\r\n\r\n  return (\r\n      <div className=\"name-and-message-min\">\r\n        <div className=\"name-contact-min\">{contact.fullname}</div>\r\n        <div className=\"last-message-min\">\r\n          {shorthand(contact.lastMessage?.content)}\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default NameLastMessage;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nfunction LastTime({ contact }) {\r\n  return (\r\n      <div className=\"last-time-min\">\r\n        {moment(contact.lastMessage?.time).format(\"hh:mm\")}\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default LastTime;\r\n","import React from \"react\";\nimport Avatar from \"./Avatar\";\nimport NameLastMessage from \"./NameLastMessage\";\nimport LastTime from \"./LastTime\";\nimport { useDispatch } from \"react-redux\";\nimport { chatId } from \"../../../redux/actions\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nfunction Contact({ contact }) {\n  const chatSelected = useParams().id;\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  function handleOpenChat(contact) {\n    if (chatSelected !== contact._id) {\n      dispatch(chatId(contact));\n      history.push(contact._id);\n    }\n  }\n\n  return (\n    <div\n      className={\n        chatSelected === contact._id ? \"chat-contact-selected\" : \"chat-contact\"\n      }\n      onClick={() => handleOpenChat(contact)}\n    >\n      <Avatar contact={contact}/>\n      <NameLastMessage contact={contact}/>\n      <LastTime contact={contact}/>\n    </div>\n  );\n}\n\nexport default Contact;\n","import React from \"react\";\r\nimport {  useSelector } from \"react-redux\";\r\nimport Contact from \"./Contact\";\r\n\r\nfunction Contacts() {\r\n  const contacts = useSelector((state) => state.contacts.items);\r\n  const searchValue = useSelector(\r\n    (state) => state.application.searchValueContacts\r\n  );\r\n\r\n  const filterContacts = contacts.filter((item) => {\r\n    const text = item.fullname.toLowerCase();\r\n    const lowerCaseSearch = searchValue.toLowerCase();\r\n\r\n    return text.indexOf(lowerCaseSearch) !== -1;\r\n  });\r\n\r\n  return (\r\n    <div className=\"chat-contact-container\">\r\n      {filterContacts.map((contact) => {\r\n        return (\r\n          <Contact key={contact._id} contact={contact} />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setSearchValueContacts } from \"../../redux/actions\";\r\n\r\nfunction ContactsSearch() {\r\n  const searchValue = useSelector(state => state.application.searchValueContacts)\r\n  const handleChange = (e) => {\r\n    dispatch(setSearchValueContacts(e.target.value));\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"for-search\">\r\n      <div className=\"search-contact-1\">\r\n        <div className=\"search-contact-2\">\r\n          <i className=\"material-icons\">search</i>\r\n        </div>\r\n        <div className=\"input-search\">\r\n          <input\r\n            type=\"search\"\r\n            placeholder=\"search contact\"\r\n            className=\"search-bar-skeleton\"\r\n            value={searchValue}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContactsSearch;\r\n","import React from \"react\";\r\nimport Contacts from \"./Contacts/Contacts\";\r\nimport ContactsSearch from \"./ContactsSearch\";\r\n\r\nfunction SideBar() {\r\n  return (\r\n    <div className=\"out-chat-box\">\r\n      <div className=\"chat-box\">\r\n        <ContactsSearch />\r\n        <Contacts />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SideBar;\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport MainBox from \"./Components/MainBox/MainBox\";\r\nimport ProfileWrapper from \"./Components/ProfileId/ProfileWrapper\";\r\nimport SideBar from \"./Components/Sidebar/SideBar\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Route path=\"/:id?\">\r\n        <SideBar />\r\n        <MainBox />\r\n        <ProfileWrapper />\r\n      </Route>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\r\nimport { max } from \"moment\";\r\n\r\nfunction SkeletonSideBar() {\r\n  const skeleton = [1, 2, 3, 4, 5, 6, 7, 8, 9]\r\n  return (\r\n    <div className=\"skeleton-outer-box\">\r\n      {skeleton.map((item) => {\r\n        return (\r\n          <div className=\"chat-skeleton\" key={item} style={{ fontSize: 16, lineHeight: 1.2 }}>\r\n            <div className=\"circle-skeleton\">\r\n              <SkeletonTheme color=\"#e3e3e3\">\r\n                <Skeleton circle={true} height={40} width={40} />\r\n              </SkeletonTheme>\r\n            </div>\r\n            <div className=\"line-skeleton\">\r\n              <SkeletonTheme color=\"#e3e3e3\">\r\n                <Skeleton count={2} width={max} />\r\n              </SkeletonTheme>\r\n            </div>\r\n          </div>\r\n        )\r\n      })}\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SkeletonSideBar;\r\n","import React from \"react\";\r\nimport SkeletonSidebar from \"./SkeletonSidebar\";\r\n\r\nfunction SkeletonLoading() {\r\n  return (\r\n    <div className=\"skeleton\">\r\n      <div className=\"chat-box-skeleton\">\r\n        <div className=\"search-skeleton\">\r\n          <div className=\"search-skeleton-2\">\r\n            <i className=\"material-icons\">search</i>\r\n          </div>\r\n          <div className=\"input-skeleton\">\r\n            <input\r\n              type=\"search\"\r\n              placeholder=\"search contact\"\r\n              className=\"search-bar-skeleton\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <SkeletonSidebar />\r\n      </div>\r\n      <div className=\"box-loading\">\r\n        Please, select a chat to start messaging\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default SkeletonLoading;\r\n","import React, { useEffect } from \"react\";\nimport App from \"./App\";\nimport SkeletonLoading from \"./Components/LoadingSkeleton/SkeletonLoading\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loadContacts, loadMyId } from \"./redux/actions\";\n\nfunction Root() {\n  const dispatch = useDispatch();\n  const loadingContacts = useSelector((state) => state.contacts.loading);\n  const loadingMyId = useSelector((state) => state.profile.loading);\n\n  useEffect(() => {\n    //получаем контакты\n    dispatch(loadContacts());\n    //получаем профиль\n    dispatch(loadMyId());\n  }, [dispatch]);\n\n  return loadingContacts || loadingMyId ? <SkeletonLoading /> : <App />;\n}\n\nexport default Root;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport application from \"./redux/application\";\nimport contacts from \"./redux/contacts\";\nimport messages from \"./redux/messages\";\nimport profile from \"./redux/profile\";\nimport \"./App.css\";\nimport Root from \"./Root\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\nimport \"normalize.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst rootReducer = combineReducers({\n  application,\n  contacts,\n  messages,\n  profile,\n});\n\nconst store = createStore(rootReducer, applyMiddleware(thunk, logger));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <Root />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}